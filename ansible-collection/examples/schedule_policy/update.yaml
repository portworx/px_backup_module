---
- name: Update PX-Backup Schedule Policies
  hosts: localhost
  gather_facts: true

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/schedule_policy/update.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - org_id is defined
          - schedule_policy_updates is defined
        fail_msg: "Required variables must be defined"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"
    - name: Update schedule policies
      block:
        - name: Update schedule_policy
          schedule_policy:
            operation: UPDATE
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            org_id: "{{ org_id }}"
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            schedule_policy: "{{ item.schedule_policy }}"
            # Optional update parameters
            labels: "{{ item.labels | default(omit) }}"
            ownership: "{{ item.ownership | default(omit) }}"
            validate_certs: "{{ item.validate_certs | default(true) }}"
          register: schedule_policy_result
          loop: "{{ schedule_policy_updates }}"
          loop_control:
            label: "{{ item.name }}"
          
      rescue:
        - name: Display error details
          debug:
            msg: "Failed to update schedule policy: {{ schedule_policy_result.msg if schedule_policy_result.msg is defined else 'Unknown error occurred' }}"
          when: schedule_policy_result is defined

        - name: Fail with error message
          fail:
            msg: "Failed to update schedule policies. See above for details."

    # Output configuration: Display the output or save to file
    - name: Handle output
      include_tasks: "{{ playbook_dir | dirname }}/output_handler/main.yaml"
      vars:
        output_data: "{{ schedule_policy_result }}"
        output_filename_prefix: "schedule_policy_update"
      when: output_config.enabled | default(false)