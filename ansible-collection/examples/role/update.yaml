# ansible-collection/examples/role/update.yaml
---
- name: Update PX-Backup Roles
  hosts: localhost
  gather_facts: false

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/role/update.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - org_id is defined
          - role_updates is defined
        fail_msg: "Required variables must be defined"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"
    - name: Update roles
      block:
        - name: Update role
          role:
            operation: UPDATE
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            org_id: "{{ org_id }}"
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            rules: "{{ item.rules }}"
            # Optional update parameters
            labels: "{{ item.labels | default(omit) }}"
            ownership: "{{ item.ownership | default(omit) }}"
            validate_certs: "{{ item.validate_certs | default(true) }}"
          register: role_result
          loop: "{{ role_updates }}"
          loop_control:
            label: "{{ item.name }}"

        # Display successful updates
        - name: Display update results
          debug:
            msg: "Successfully updated role '{{ item.item.name }}'"
          loop: "{{ role_result.results }}"
          loop_control:
            label: "{{ item.item.name }}"
          when: not item.failed

        # Display failed updates
        - name: Display failed updates
          debug:
            msg: "Failed to update role '{{ item.item.name }}': {{ item.msg }}"
          loop: "{{ role_result.results }}"
          loop_control:
            label: "{{ item.item.name }}"
          when: item.failed
          
      rescue:
        - name: Display error details
          debug:
            msg: "Failed to update role: {{ role_result.msg if role_result.msg is defined else 'Unknown error occurred' }}"
          when: role_result is defined

        - name: Fail with error message
          fail:
            msg: "Failed to update roles. See above for details."