---
- name: Update PX-Backup Recipients
  hosts: localhost
  gather_facts: true

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/recipient/update.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - recipients_to_update is defined
        fail_msg: "Required variables must be defined"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"

    - name: Update recipients
      block:
        - name: Update recipient configuration
          recipient:
            operation: UPDATE
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            org_id: "{{ org_id | default('default') }}"
            recipient_type: "{{ item.recipient_type | default('EMAIL') }}"
            recipient_ids: "{{ item.recipient_ids }}"
            receiver_ref:
              name: "{{ item.receiver_ref.name }}"
              uid: "{{ item.receiver_ref.uid }}"
            severity: "{{ item.severity | default('WARNING') }}"
            active: "{{ item.active | default(true) }}"
            validate_certs: "{{ item.validate_certs | default(true) }}"
          loop: "{{ recipients_to_update }}"
          register: update_result
          loop_control:
            label: "{{ item.name }}"


    # Output configuration: Display the output or save to file
    - name: Handle output
      include_tasks: "{{ playbook_dir | dirname }}/output_handler/main.yaml"
      vars:
        output_data: "{{ update_result }}"
        output_filename_prefix: "recipient_update"
      when: output_config.enabled | default(false)