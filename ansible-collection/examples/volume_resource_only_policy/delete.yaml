# ansible-collection/examples/volume_resource_only_policy/delete.yaml
---
- name: Delete PX-Backup Volume Resource Only Policies
  hosts: localhost
  gather_facts: false

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/volume_resource_only_policy/delete.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - org_id is defined
          - volume_resource_only_policy_deletes is defined
        fail_msg: "Required variables must be defined"

    # Validate policy configurations
    - name: Validate volume resource only policy configurations
      assert:
        that: 
          - "item.name is defined"
          - "item.uid is defined"
        fail_msg: "Each volume resource only policy configuration must include 'name' and 'uid'"
      loop: "{{ volume_resource_only_policy_deletes }}"
      loop_control:
        label: "{{ item.name }}"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"
    
    - name: Delete volume resource only policies
      block:
        - name: Delete volume resource only policy
          volume_resource_only_policy:
            operation: DELETE
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            org_id: "{{ org_id }}"
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            validate_certs: "{{ item.validate_certs | default(true) }}"
          register: delete_result
          loop: "{{ volume_resource_only_policy_deletes }}"
          loop_control:
            label: "{{ item.name }}"

        # Display successful deletes
        - name: Display successful deletes
          debug:
            msg: "Successfully deleted volume resource only policy '{{ item.item.name }}'"
          loop: "{{ delete_result.results }}"
          loop_control:
            label: "{{ item.item.name }}"
          when: not item.failed

        # Display failures
        - name: Display failed deletes
          debug:
            msg: "Failed to delete volume resource only policy '{{ item.item.name }}': {{ item.msg }}"
          loop: "{{ delete_result.results }}"
          loop_control:
            label: "{{ item.item.name }}"
          when: item.failed

      rescue:
        - name: Display error details
          debug:
            msg: "Failed to delete volume resource only policies: {{ 'One or more items failed' if delete_result.results is defined else delete_result.msg | default('Unknown error occurred') }}"
          when: delete_result is defined

        - name: Fail with error message
          fail:
            msg: "Failed to delete volume resource only policies. See above for details."