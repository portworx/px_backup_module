---
# ansible-collection/examples/backup/delete.yaml
- name: Delete PX-Backup Backups
  hosts: localhost
  gather_facts: true

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/backup/delete.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - org_id is defined
          - backup_deletes is defined
        fail_msg: "Required variables must be defined"

    # Validate backup configurations
    - name: Validate backup configurations
      assert:
        that: 
          - "item.name is defined"
          - "item.uid is defined"
        fail_msg: "Each backup configuration must include 'name' and 'uid'"
      loop: "{{ backup_deletes }}"
      loop_control:
        label: "{{ item.name }}"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"
    - name: Delete backups
      block:
        - name: Delete backup
          backup:
            operation: DELETE
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            org_id: "{{ org_id }}"
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            cluster_ref: "{{ item.cluster_ref | default(omit) }}"
            validate_certs: "{{ item.validate_certs | default(true) }}"
          register: delete_result
          loop: "{{ backup_deletes }}"
          loop_control:
            label: "{{ item.name }}"

      rescue:
        - name: Display error details
          debug:
            msg: "Failed to delete backups: {{ 'One or more items failed' if delete_result.results is defined else delete_result.msg | default('Unknown error occurred') }}"
          when: delete_result is defined

        - name: Fail with error message
          fail:
            msg: "Failed to delete backups. See above for details."


    # Output configuration: Display the output or save to file
    - name: Handle output
      include_tasks: "{{ playbook_dir | dirname }}/output_handler/main.yaml"
      vars:
        output_data: "{{ delete_result }}"
        output_filename_prefix: "backup_delete"
      when: output_config.enabled | default(false)
