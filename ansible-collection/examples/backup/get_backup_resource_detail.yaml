# ansible-collection/examples/backup/get_backup_resource_detail.yaml
---
- name: Enumerate PX-Backup Backups
  hosts: localhost
  gather_facts: false

  vars_files:
    - "{{ inventory_dir }}/group_vars/common/all.yaml"
    - "{{ inventory_dir }}/group_vars/backup/get_backup_resource_detail.yaml"

  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - px_backup_api_url is defined
          - org_id is defined
        fail_msg: "Required variables must be defined"

  tasks:
    - name: Login and fetch Px-Backup token
      include_tasks: "{{ playbook_dir | dirname }}/auth/auth.yaml"
    - name: Enumerate VM backups
      block:
        - name: Get list of VM backups
          backup:
            operation: GET_BACKUP_RESOURCE_DETAILS
            api_url: "{{ px_backup_api_url }}"
            token: "{{ px_backup_token }}"
            org_id: "{{ org_id }}"
            name: "{{ name }}"
            uid: "{{ uid }}"
            validate_certs: "{{ validate_certs | default(true) }}"
          register: backup_result

        - name: Display detailed backup information
          debug:
            msg:
                  - "Backup Name: {{ backup_result.backup.metadata.name }}"
                  - "UID: {{ backup_result.backup.metadata.uid }}"
                  - "Org ID: {{ backup_result.backup.metadata.org_id }}"
                  - "Owner: {{ backup_result.backup.metadata.ownership.owner }}"
                  - "Cluster: {{ backup_result.backup.cluster }}"
                  - "Backup Location: {{ backup_result.backup.backup_location_ref.name }}"
                  - "Backup Type: {{ backup_result.backup.backup_object_type.type }}"
                  - "Status: {{ backup_result.backup.status.status }}"
                  - "Status Reason: {{ backup_result.backup.status.reason }}"
                  - "Create Time: {{ backup_result.backup.metadata.create_time }}"
                  - "Last Update Time: {{ backup_result.backup.metadata.last_update_time }}"
                  - "Namespaces: {{ backup_result.backup.namespaces | join(', ') }}"
                  
        - name: Print VM and volume details
          debug:
            msg: |
              {% for vm in backup_result.backup.resource_details.virtual_machine_list.virtual_machines %}
              VM Name: {{ vm.vm_info.name }}
              VM Status: {{ vm.vm_info.status.status }}
              {% for volume in vm.volumes %}
                - Volume Name: {{ volume.name }}
                  Volume Size: {{ volume.size }}
                  Volume Status: {{ volume.status.status }}
              {% endfor %}
              {% endfor %}
          when: backup_result.backup.status.status == "Success"

      rescue:
        - name: Display error details
          debug:
            msg: "Failed to enumerate backups: {{ backup_result.msg if backup_result.msg is defined else 'Unknown error occurred' }}"
          when: backup_result is defined

        - name: Fail with error message
          fail:
            msg: "Failed to enumerate backups. See above for details."
